{"ast":null,"code":"import { Observable, Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/hero.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\n\nfunction HeroSearchComponent_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"a\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const hero_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"background-color\", ctx_r1.randomColor());\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/detail/\", hero_r2.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", hero_r2.name, \" \");\n  }\n}\n\nexport class HeroSearchComponent {\n  constructor(heroService) {\n    this.heroService = heroService;\n    this.searchTerms = new Subject();\n  } // Push a search term into the observable stream.\n\n\n  search(term) {\n    this.searchTerms.next(term);\n  }\n\n  ngOnInit() {\n    this.heroes$ = this.searchTerms.pipe( // wait 300ms after each keystroke before considering the term\n    debounceTime(300), // ignore new term if same as previous term\n    distinctUntilChanged(), // switch to new search observable each time the term changes\n    switchMap(term => ({\n      'hero': this.heroService.searchHeroes(term)\n    })));\n  }\n\n  randomColor() {\n    const randomInt = (min, max) => {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    };\n\n    var h = randomInt(0, 360);\n    var s = randomInt(42, 98);\n    var l = randomInt(40, 90);\n    return `hsl(${h},${s}%,${l}%)`;\n  }\n\n}\n\nHeroSearchComponent.ɵfac = function HeroSearchComponent_Factory(t) {\n  return new (t || HeroSearchComponent)(i0.ɵɵdirectiveInject(i1.HeroService));\n};\n\nHeroSearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HeroSearchComponent,\n  selectors: [[\"app-hero-search\"]],\n  decls: 8,\n  vars: 3,\n  consts: [[\"id\", \"search-component\"], [\"for\", \"search-box\"], [\"id\", \"search-box\", 3, \"input\"], [\"searchBox\", \"\"], [1, \"search-result\"], [4, \"ngFor\", \"ngForOf\"], [3, \"routerLink\"]],\n  template: function HeroSearchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"label\", 1);\n      i0.ɵɵtext(2, \"Hero Search\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"input\", 2, 3);\n      i0.ɵɵlistener(\"input\", function HeroSearchComponent_Template_input_input_3_listener() {\n        i0.ɵɵrestoreView(_r3);\n\n        const _r0 = i0.ɵɵreference(4);\n\n        return i0.ɵɵresetView(ctx.search(_r0.value));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ul\", 4);\n      i0.ɵɵtemplate(6, HeroSearchComponent_li_6_Template, 3, 4, \"li\", 5);\n      i0.ɵɵpipe(7, \"async\");\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(7, 1, ctx.heroes$));\n    }\n  },\n  dependencies: [i2.NgForOf, i3.RouterLinkWithHref, i2.AsyncPipe],\n  styles: [\"#search-component[_ngcontent-%COMP%] {\\n  width: 60%;\\n  margin: auto;\\n  text-align: center;\\n  margin-top: 2rem;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n  display: block;\\n  font-weight: bold;\\n  font-size: 1.2rem;\\n  margin-top: 1rem;\\n  margin-bottom: .5rem;\\n\\n}\\n\\ninput[_ngcontent-%COMP%] {\\n  padding: .5rem;\\n  width: 100%;\\n  max-width: 600px;\\n  box-sizing: border-box;\\n  display: block;\\n\\n}\\n\\ninput[_ngcontent-%COMP%]:focus {\\n  outline: #336699 auto 2px;\\n}\\n\\nli[_ngcontent-%COMP%] {\\n  list-style-type: none;\\n  width: 33.33%;\\n  display: inline;\\n  background-color: \\n\\n}\\n\\n.search-result[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] { \\n  border: 2px solid gray;\\n  display: inline-block;\\n  max-width: 600px;\\n  padding: 2rem;\\n  color: black;\\n  text-decoration: none;\\n  margin: 20px;\\n  border-radius: 50px;\\n  \\n}\\n\\n.search-result[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover {\\n  filter: brightness(90%);\\n  color: white;\\n}\\n\\nul.search-result[_ngcontent-%COMP%] {\\n  margin-top: 15;\\n  padding-left: 0;\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  justify-content: space-around;\\n  align-content: flex-start;\\n  align-items: flex-start;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlcm8tc2VhcmNoLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsOEJBQThCOztBQUU5QjtFQUNFLFVBQVU7RUFDVixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxpQkFBaUI7RUFDakIsaUJBQWlCO0VBQ2pCLGdCQUFnQjtFQUNoQixvQkFBb0I7O0FBRXRCOztBQUNBO0VBQ0UsY0FBYztFQUNkLFdBQVc7RUFDWCxnQkFBZ0I7RUFDaEIsc0JBQXNCO0VBQ3RCLGNBQWM7O0FBRWhCOztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UscUJBQXFCO0VBQ3JCLGFBQWE7RUFDYixlQUFlO0VBQ2Y7O0FBRUY7O0FBQ0E7RUFDRSxzQkFBc0I7RUFDdEIscUJBQXFCO0VBQ3JCLGdCQUFnQjtFQUNoQixhQUFhO0VBQ2IsWUFBWTtFQUNaLHFCQUFxQjtFQUNyQixZQUFZO0VBQ1osbUJBQW1COztBQUVyQjs7QUFJQTtFQUNFLHVCQUF1QjtFQUN2QixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsZUFBZTtFQUNmLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsZUFBZTtFQUNmLDZCQUE2QjtFQUM3Qix5QkFBeUI7RUFDekIsdUJBQXVCO0FBQ3pCIiwiZmlsZSI6Imhlcm8tc2VhcmNoLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBIZXJvU2VhcmNoIHByaXZhdGUgc3R5bGVzICovXG5cbiNzZWFyY2gtY29tcG9uZW50IHtcbiAgd2lkdGg6IDYwJTtcbiAgbWFyZ2luOiBhdXRvO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi10b3A6IDJyZW07XG59XG5cbmxhYmVsIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBmb250LXNpemU6IDEuMnJlbTtcbiAgbWFyZ2luLXRvcDogMXJlbTtcbiAgbWFyZ2luLWJvdHRvbTogLjVyZW07XG5cbn1cbmlucHV0IHtcbiAgcGFkZGluZzogLjVyZW07XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDYwMHB4O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBkaXNwbGF5OiBibG9jaztcblxufVxuXG5pbnB1dDpmb2N1cyB7XG4gIG91dGxpbmU6ICMzMzY2OTkgYXV0byAycHg7XG59XG5cbmxpIHtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICB3aWR0aDogMzMuMzMlO1xuICBkaXNwbGF5OiBpbmxpbmU7XG4gIGJhY2tncm91bmQtY29sb3I6IFxuXG59XG4uc2VhcmNoLXJlc3VsdCBsaSBhIHsgXG4gIGJvcmRlcjogMnB4IHNvbGlkIGdyYXk7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWF4LXdpZHRoOiA2MDBweDtcbiAgcGFkZGluZzogMnJlbTtcbiAgY29sb3I6IGJsYWNrO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIG1hcmdpbjogMjBweDtcbiAgYm9yZGVyLXJhZGl1czogNTBweDtcbiAgXG59XG5cblxuXG4uc2VhcmNoLXJlc3VsdCBsaSBhOmhvdmVyIHtcbiAgZmlsdGVyOiBicmlnaHRuZXNzKDkwJSk7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxudWwuc2VhcmNoLXJlc3VsdCB7XG4gIG1hcmdpbi10b3A6IDE1O1xuICBwYWRkaW5nLWxlZnQ6IDA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gIGFsaWduLWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xufVxuIl19 */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAmBA,UAAnB,EAA+BC,OAA/B,QAA8C,MAA9C;AAEA,SACEC,YADF,EACgBC,oBADhB,EACsCC,SADtC,QAEO,gBAFP;;;;;;;;ICCIC,2BAAyC,CAAzC,EAAyC,GAAzC,EAAyC,CAAzC;IAKIA;IACFA;;;;;;IAJEA;IAAAA;IACAA;IAEAA;IAAAA;;;;ADMR,OAAM,MAAOC,mBAAP,CAA0B;EAI9BC,YAAoBC,WAApB,EAA4C;IAAxB;IAFZ,mBAAc,IAAIP,OAAJ,EAAd;EAGP,CAL6B,CAO9B;;;EACAQ,MAAM,CAACC,IAAD,EAAa;IACjB,KAAKC,WAAL,CAAiBC,IAAjB,CAAsBF,IAAtB;EACD;;EAEDG,QAAQ;IACN,KAAKC,OAAL,GAAe,KAAKH,WAAL,CAAiBI,IAAjB,EACb;IACAb,YAAY,CAAC,GAAD,CAFC,EAIb;IACAC,oBAAoB,EALP,EAOb;IACAC,SAAS,CAAEM,IAAD,KAAmB;MAAC,QAAQ,KAAKF,WAAL,CAAiBQ,YAAjB,CAA8BN,IAA9B;IAAT,CAAnB,CAAD,CARI,CAAf;EAWD;;EAEDO,WAAW;IACT,MAAMC,SAAS,GAAG,CAACC,GAAD,EAAcC,GAAd,KAA6B;MAC7C,OAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD;IACD,CAFD;;IAIA,IAAIK,CAAC,GAAGN,SAAS,CAAC,CAAD,EAAI,GAAJ,CAAjB;IACA,IAAIO,CAAC,GAAGP,SAAS,CAAC,EAAD,EAAK,EAAL,CAAjB;IACA,IAAIQ,CAAC,GAAGR,SAAS,CAAC,EAAD,EAAK,EAAL,CAAjB;IAEA,OAAO,OAAOM,CAAC,IAAIC,CAAC,KAAKC,CAAC,IAA1B;EAED;;AArC6B;;;mBAAnBpB,qBAAmBD;AAAA;;;QAAnBC;EAAmBqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;;MChBhC1B,+BAA2B,CAA3B,EAA2B,OAA3B,EAA2B,CAA3B;MAC0BA;MAAWA;MACnCA;MAAkCA;QAAAA;;QAAA;;QAAA,OAASA,qCAAT;MAAgC,CAAhC;MAAlCA;MAEAA;MACEA;;MAQFA;;;;MARuBA;MAAAA","names":["Observable","Subject","debounceTime","distinctUntilChanged","switchMap","i0","HeroSearchComponent","constructor","heroService","search","term","searchTerms","next","ngOnInit","heroes$","pipe","searchHeroes","randomColor","randomInt","min","max","Math","floor","random","h","s","l","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\removevirus\\Desktop\\tour-of-heroes\\src\\app\\hero-search\\hero-search.component.ts","C:\\Users\\removevirus\\Desktop\\tour-of-heroes\\src\\app\\hero-search\\hero-search.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport { interval, Observable, Subject } from 'rxjs';\n\nimport {\n  debounceTime, distinctUntilChanged, switchMap\n} from 'rxjs/operators';\n\nimport { Hero } from '../hero';\nimport { HeroService } from '../services/hero.service';\n\n@Component({\n  selector: 'app-hero-search',\n  templateUrl: './hero-search.component.html',\n  styleUrls: ['./hero-search.component.css']\n})\nexport class HeroSearchComponent implements OnInit {\n  heroes$!: Observable<Hero[]>;\n  private searchTerms = new Subject<string>();\n\n  constructor(private heroService: HeroService) {\n  }\n\n  // Push a search term into the observable stream.\n  search(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  ngOnInit(): void {\n    this.heroes$ = this.searchTerms.pipe(\n      // wait 300ms after each keystroke before considering the term\n      debounceTime(300),\n\n      // ignore new term if same as previous term\n      distinctUntilChanged(),\n\n      // switch to new search observable each time the term changes\n      switchMap((term: string) => ({'hero': this.heroService.searchHeroes(term)})\n      ),\n    );\n  }\n\n  randomColor(): string {\n    const randomInt = (min: number, max: number) => {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    };\n\n    var h = randomInt(0, 360);\n    var s = randomInt(42, 98);\n    var l = randomInt(40, 90);\n\n    return `hsl(${h},${s}%,${l}%)`;\n\n  };\n}\n\n\n\n","<div id=\"search-component\">\n  <label for=\"search-box\">Hero Search</label>\n  <input #searchBox id=\"search-box\" (input)=\"search(searchBox.value)\" />\n\n  <ul class=\"search-result\">\n    <li *ngFor=\"let hero of heroes$ | async\">\n      <a\n        [style.background-color]=\"randomColor()\"\n        routerLink=\"/detail/{{ hero.id }}\"\n      >\n        {{ hero.name }}\n      </a>\n    </li>\n  </ul>\n</div>\n"]},"metadata":{},"sourceType":"module"}